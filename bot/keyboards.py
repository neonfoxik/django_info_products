from telebot.types import (
    InlineKeyboardButton,
    InlineKeyboardMarkup,
    ReplyKeyboardMarkup,
    KeyboardButton,
)
from django.conf import settings
from django.contrib.auth.models import User

# –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
main_markup = InlineKeyboardMarkup()
btn1 = InlineKeyboardButton("üõí –ö–∞—Ç–∞–ª–æ–≥ —Ç–æ–≤–∞—Ä–æ–≤", callback_data="catalog")
btn2 = InlineKeyboardButton("üìû –ü–æ–¥–¥–µ—Ä–∂–∫–∞", callback_data="help_main")
btn3 = InlineKeyboardButton("üõ°Ô∏è –ì–∞—Ä–∞–Ω—Ç–∏—è", callback_data="warranty_main_menu")
btn4 = InlineKeyboardButton("üé´ –ü–æ–ª—É—á–∏—Ç—å –ø—Ä–æ–º–æ–∫–æ–¥", callback_data="get_promocode")
main_markup.add(btn1).add(btn2).add(btn3).add(btn4)

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ç–∏–ø–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∏ (—É—Å—Ç–∞—Ä–µ–≤—à–∞—è, –∑–∞–º–µ–Ω–µ–Ω–∞ –Ω–∞ get_support_platform_markup)
support_markup = InlineKeyboardMarkup()
support_ozon_btn = InlineKeyboardButton("üü† –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –û–∑–æ–Ω", callback_data="support_ozon")
support_wb_btn = InlineKeyboardButton("üü£ –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –í–∞–π–ª–¥–±–µ—Ä—Ä–∏–∑", callback_data="support_wildberries")
back_support_btn = InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="back_to_main")
support_markup.add(support_ozon_btn).add(support_wb_btn).add(back_support_btn)

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã –ø–æ–∫—É–ø–∫–∏
def get_platform_choice_markup(action_type, product_id=None):
    """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –≤—ã–±–æ—Ä–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã –ø–æ–∫—É–ø–∫–∏ —Ç–æ–≤–∞—Ä–∞"""
    markup = InlineKeyboardMarkup()
    
    if product_id:
        ozon_btn = InlineKeyboardButton("üü† –û–∑–æ–Ω", callback_data=f"{action_type}_ozon_{product_id}")
        wb_btn = InlineKeyboardButton("üü£ –í–∞–π–ª–¥–±–µ—Ä—Ä–∏–∑", callback_data=f"{action_type}_wb_{product_id}")
    else:
        ozon_btn = InlineKeyboardButton("üü† –û–∑–æ–Ω", callback_data=f"{action_type}_ozon")
        wb_btn = InlineKeyboardButton("üü£ –í–∞–π–ª–¥–±–µ—Ä—Ä–∏–∑", callback_data=f"{action_type}_wb")
    
    back_btn = InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="back_to_main")
    
    markup.add(ozon_btn).add(wb_btn).add(back_btn)
    return markup

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
back_to_main_markup = InlineKeyboardMarkup()
back_btn = InlineKeyboardButton("‚¨ÖÔ∏è –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="back_to_main")
back_to_main_markup.add(back_btn)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã —Å –∫–Ω–æ–ø–∫–æ–π –Ω–∞–∑–∞–¥
def get_back_markup(callback_data):
    markup = InlineKeyboardMarkup()
    back_btn = InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data=callback_data)
    markup.add(back_btn)
    return markup

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è —Ç–æ–≤–∞—Ä–∞ –±–µ–∑ –∫–Ω–æ–ø–∫–∏ —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–π –≥–∞—Ä–∞–Ω—Ç–∏–∏
def get_product_menu_markup(product_id):
    markup = InlineKeyboardMarkup()
    markup.add(InlineKeyboardButton("üìñ –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è", callback_data=f"instructions_{product_id}"))
    markup.add(InlineKeyboardButton("‚ùì FAQ", callback_data=f"faq_{product_id}"))
    markup.add(InlineKeyboardButton("üõ°Ô∏è –ì–∞—Ä–∞–Ω—Ç–∏—è", callback_data=f"warranty_{product_id}"))
    #markup.add(InlineKeyboardButton("üìû –ü–æ–¥–¥–µ—Ä–∂–∫–∞", callback_data=f"support_{product_id}"))
    markup.add(InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data=f"category_{product_id}"))
    return markup

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–π –≥–∞—Ä–∞–Ω—Ç–∏–∏
def get_warranty_markup_with_extended(product_id, has_extended_warranty=False):
    markup = InlineKeyboardMarkup()
    if not has_extended_warranty:
        markup.add(InlineKeyboardButton("‚úÖ –ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—É—é –≥–∞—Ä–∞–Ω—Ç–∏—é", callback_data=f"activate_warranty_{product_id}"))
    
    # –î–æ–±–∞–≤–ª—è–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∫–Ω–æ–ø–∫–∏
    markup.add(InlineKeyboardButton("üìã –£—Å–ª–æ–≤–∏—è –≥–∞—Ä–∞–Ω—Ç–∏–∏", callback_data="warranty_conditions"))
    markup.add(InlineKeyboardButton("üõ†Ô∏è –û–±—Ä–∞—Ç–∏—Ç—å—Å—è –ø–æ –≥–∞—Ä–∞–Ω—Ç–∏–∏", callback_data="warranty_cases"))
    markup.add(InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data=f"product_{product_id}"))
    return markup

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–∫—Ä–∏–Ω—à–æ—Ç–∞
def get_screenshot_markup(product_id):
    markup = InlineKeyboardMarkup()
    markup.add(InlineKeyboardButton("‚ùå –û—Ç–º–µ–Ω–∏—Ç—å", callback_data=f"cancel_warranty_{product_id}"))
    return markup

def get_main_markup(user_id: int) -> ReplyKeyboardMarkup:
    """–°–æ–∑–¥–∞–µ—Ç –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é —Å —É—á–µ—Ç–æ–º —Ä–æ–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    markup = ReplyKeyboardMarkup(resize_keyboard=True)
    markup.row("üì± –ö–∞—Ç–∞–ª–æ–≥ —Ç–æ–≤–∞—Ä–æ–≤")
    markup.row("üõ°Ô∏è –ì–∞—Ä–∞–Ω—Ç–∏—è", "üîß –ì–∞—Ä–∞–Ω—Ç–∏–π–Ω—ã–π —Å–ª—É—á–∞–π")
    if User.objects.get(telegram_id=user_id).is_admin:
        markup.row("üîß –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å")
    return markup

def get_warranty_main_menu_markup(has_active_warranties=False):
    """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é –≥–∞—Ä–∞–Ω—Ç–∏–∏"""
    markup = InlineKeyboardMarkup()
    markup.add(InlineKeyboardButton("üìã –£—Å–ª–æ–≤–∏—è –≥–∞—Ä–∞–Ω—Ç–∏–∏", callback_data="warranty_conditions"))
    markup.add(InlineKeyboardButton("‚úÖ –ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—É—é –≥–∞—Ä–∞–Ω—Ç–∏—é", callback_data="waranty_goods_fast"))
    if has_active_warranties:
        markup.add(InlineKeyboardButton("üõ°Ô∏è –ú–æ–∏ –≥–∞—Ä–∞–Ω—Ç–∏–∏", callback_data="my_warranties"))
    markup.add(InlineKeyboardButton("üõ†Ô∏è –û–±—Ä–∞—Ç–∏—Ç—å—Å—è –ø–æ –≥–∞—Ä–∞–Ω—Ç–∏–∏", callback_data="warranty_cases"))
    markup.add(InlineKeyboardButton("‚¨ÖÔ∏è –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="back_to_main"))
    return markup

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è —Å–∏—Å—Ç–µ–º—ã –ø–æ–¥–¥–µ—Ä–∂–∫–∏

def get_support_platform_markup():
    """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –≤—ã–±–æ—Ä–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã –ø–æ–¥–¥–µ—Ä–∂–∫–∏"""
    markup = InlineKeyboardMarkup()
    ozon_btn = InlineKeyboardButton("üü† –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –û–∑–æ–Ω", callback_data="support_ozon")
    wb_btn = InlineKeyboardButton("üü£ –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –í–∞–π–ª–¥–±–µ—Ä—Ä–∏–∑", callback_data="support_wildberries")
    my_btn = InlineKeyboardButton("üóÇ –ú–æ–∏ –æ–±—Ä–∞—â–µ–Ω–∏—è", callback_data="support_my_tickets")
    back_btn = InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="back_to_main")
    markup.add(ozon_btn).add(wb_btn).add(my_btn).add(back_btn)
    return markup

def get_close_ticket_markup():
    """–°–æ–∑–¥–∞–µ—Ç –∫–Ω–æ–ø–∫—É –¥–ª—è –∑–∞–∫—Ä—ã—Ç–∏—è –æ–±—Ä–∞—â–µ–Ω–∏—è –ø–æ–¥ —Å–æ–æ–±—â–µ–Ω–∏–µ–º –∞–¥–º–∏–Ω–∞"""
    markup = InlineKeyboardMarkup()
    close_btn = InlineKeyboardButton("‚úÖ –°–ø–∞—Å–∏–±–æ, —è –ø–æ–ª—É—á–∏–ª –æ—Ç–≤–µ—Ç –Ω–∞ —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å", callback_data="close_ticket")
    markup.add(close_btn)
    return markup

def get_admin_ticket_markup(ticket_id, is_assigned=False):
    """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –∞–¥–º–∏–Ω–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –Ω–æ–≤–æ–º –æ–±—Ä–∞—â–µ–Ω–∏–∏"""
    markup = InlineKeyboardMarkup()
    if not is_assigned:
        accept_btn = InlineKeyboardButton("‚úÖ –ü—Ä–∏–Ω—è—Ç—å –æ–±—Ä–∞—â–µ–Ω–∏–µ", callback_data=f"accept_ticket_{ticket_id}")
        markup.add(accept_btn)
    else:
        already_assigned_btn = InlineKeyboardButton("‚ö†Ô∏è –û–±—Ä–∞—â–µ–Ω–∏–µ —É–∂–µ –ø—Ä–∏–Ω—è—Ç–æ –¥—Ä—É–≥–∏–º –∞–¥–º–∏–Ω–æ–º", callback_data="already_assigned")
        markup.add(already_assigned_btn)
    
    view_btn = InlineKeyboardButton("üëÅÔ∏è –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –æ–±—Ä–∞—â–µ–Ω–∏–µ", callback_data=f"view_ticket_{ticket_id}")
    markup.add(view_btn)
    return markup

def get_admin_response_markup(ticket_id):
    """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –∞–¥–º–∏–Ω–∞ –≤–æ –≤—Ä–µ–º—è –æ—Ç–≤–µ—Ç–∞ –Ω–∞ –æ–±—Ä–∞—â–µ–Ω–∏–µ"""
    markup = InlineKeyboardMarkup()
    finish_btn = InlineKeyboardButton("üèÅ –ó–∞–≤–µ—Ä—à–∏—Ç—å –æ–±—Ä–∞–±–æ—Ç–∫—É", callback_data=f"finish_ticket_{ticket_id}")
    markup.add(finish_btn)
    return markup


# –ö–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –µ–≥–æ –æ–±—Ä–∞—â–µ–Ω–∏—è–º–∏
def get_user_ticket_actions_markup(ticket_id: int):
    """–ö–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π –ø–æ –≤—ã–±—Ä–∞–Ω–Ω–æ–º—É –æ–±—Ä–∞—â–µ–Ω–∏—é –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    markup = InlineKeyboardMarkup()
    continue_btn = InlineKeyboardButton("‚úçÔ∏è –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –ø–µ—Ä–µ–ø–∏—Å–∫—É", callback_data=f"support_open_{ticket_id}")
    close_btn = InlineKeyboardButton("‚úÖ –ó–∞–∫—Ä—ã—Ç—å –æ–±—Ä–∞—â–µ–Ω–∏–µ", callback_data=f"support_close_{ticket_id}")
    back_btn = InlineKeyboardButton("‚¨ÖÔ∏è –ö —Å–ø–∏—Å–∫—É –æ–±—Ä–∞—â–µ–Ω–∏–π", callback_data="support_my_tickets")
    markup.add(continue_btn).add(close_btn).add(back_btn)
    return markup

def get_user_tickets_list_markup(tickets: list):
    """–°–æ–∑–¥–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –∫–Ω–æ–ø–æ–∫ —Å –æ–±—Ä–∞—â–µ–Ω–∏—è–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    markup = InlineKeyboardMarkup()
    for t in tickets:
        title = f"#{t.id} ‚Ä¢ {t.get_platform_display()} ‚Ä¢ {t.get_status_display()}"
        markup.add(InlineKeyboardButton(title, callback_data=f"support_ticket_{t.id}"))
    markup.add(InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="help_main"))
    return markup


def get_admin_ticket_decision_markup(ticket_id: int):
    """–ö–Ω–æ–ø–∫–∏ –ø—Ä–∏–Ω—è—Ç–∏—è –∏–ª–∏ –æ—Ç–∫–∞–∑–∞ –æ—Ç –æ–±—Ä–∞—â–µ–Ω–∏—è –ø–æ—Å–ª–µ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞"""
    markup = InlineKeyboardMarkup()
    accept_btn = InlineKeyboardButton("‚úÖ –ü—Ä–∏–Ω—è—Ç—å –æ–±—Ä–∞—â–µ–Ω–∏–µ", callback_data=f"accept_ticket_{ticket_id}")
    decline_btn = InlineKeyboardButton("‚ùå –û—Ç–∫–∞–∑–∞—Ç—å—Å—è", callback_data=f"decline_ticket_{ticket_id}")
    markup.add(accept_btn).add(decline_btn)
    return markup


def get_admin_open_tickets_markup(tickets: list):
    """–°–ø–∏—Å–æ–∫ –æ—Ç–∫—Ä—ã—Ç—ã—Ö –Ω–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö –æ–±—Ä–∞—â–µ–Ω–∏–π –¥–ª—è –∞–¥–º–∏–Ω–∞"""
    markup = InlineKeyboardMarkup()
    for t in tickets:
        title = f"#{t.id} ‚Ä¢ {t.user.user_name} ‚Ä¢ {t.get_platform_display()}"
        markup.add(InlineKeyboardButton(title, callback_data=f"view_ticket_{t.id}"))
    markup.add(InlineKeyboardButton("‚¨ÖÔ∏è –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å", callback_data="admin_panel"))
    return markup


def get_broadcast_confirm_markup():
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ä–∞—Å—Å—ã–ª–∫–∏"""
    markup = InlineKeyboardMarkup()
    confirm_btn = InlineKeyboardButton("‚úÖ –û—Ç–ø—Ä–∞–≤–∏—Ç—å", callback_data="broadcast_confirm")
    cancel_btn = InlineKeyboardButton("‚ùå –û—Ç–º–µ–Ω–∏—Ç—å", callback_data="broadcast_cancel")
    back_btn = InlineKeyboardButton("‚¨ÖÔ∏è –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å", callback_data="admin_panel")
    markup.add(confirm_btn).add(cancel_btn).add(back_btn)
    return markup


def get_promocode_menu_markup():
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –º–µ–Ω—é –ø—Ä–æ–º–æ–∫–æ–¥–æ–≤"""
    markup = InlineKeyboardMarkup()
    add_btn = InlineKeyboardButton("‚ûï –î–æ–±–∞–≤–∏—Ç—å –ø—Ä–æ–º–æ–∫–æ–¥—ã", callback_data="promocode_add")
    list_btn = InlineKeyboardButton("üìã –°–ø–∏—Å–æ–∫ –ø—Ä–æ–º–æ–∫–æ–¥–æ–≤", callback_data="promocode_list")
    back_btn = InlineKeyboardButton("‚¨ÖÔ∏è –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å", callback_data="admin_panel")
    markup.add(add_btn).add(list_btn).add(back_btn)
    return markup


def get_promocode_list_markup(promocodes):
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å–ø–∏—Å–∫–∞ –ø—Ä–æ–º–æ–∫–æ–¥–æ–≤"""
    markup = InlineKeyboardMarkup()
    for promo in promocodes:
        status = "‚úÖ" if promo.is_active and not promo.is_used else "‚ùå" if promo.is_used else "‚è∏Ô∏è"
        btn_text = f"{promo.code} ({status})"
        btn = InlineKeyboardButton(btn_text, callback_data=f"promocode_detail_{promo.id}")
        markup.add(btn)
    
    back_btn = InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="promocode_menu")
    markup.add(back_btn)
    return markup


def get_promocode_detail_markup(promo_id):
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–µ—Ç–∞–ª–µ–π –ø—Ä–æ–º–æ–∫–æ–¥–∞"""
    markup = InlineKeyboardMarkup()
    toggle_btn = InlineKeyboardButton("üîÑ –ò–∑–º–µ–Ω–∏—Ç—å —Å—Ç–∞—Ç—É—Å", callback_data=f"promocode_toggle_{promo_id}")
    delete_btn = InlineKeyboardButton("üóëÔ∏è –£–¥–∞–ª–∏—Ç—å", callback_data=f"promocode_delete_{promo_id}")
    back_btn = InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="promocode_list")
    markup.add(toggle_btn).add(delete_btn).add(back_btn)
    return markup
